/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2022-01-01 11:03:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnroll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1640329561927L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/spring_workspace/practice-spring/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/spring_workspace/practice-spring/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/spring_workspace/practice-spring/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("회원등록", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/member.css\" />\r\n");
      out.write("\r\n");
      out.write("<div id=\"enroll-container\" class=\"mx-auto text-center\">\r\n");
      out.write("	<form name=\"memberEnrollFrm\" action=\"\" method=\"POST\">\r\n");
      out.write("		<table class=\"mx-auto\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>아이디</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"text\" \r\n");
      out.write("						   class=\"form-control\" \r\n");
      out.write("						   placeholder=\"4글자이상\"\r\n");
      out.write("						   name=\"id\" \r\n");
      out.write("						   id=\"id\"\r\n");
      out.write("						   value=\"honggd\"\r\n");
      out.write("						   required>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>패스워드</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" value=\"1234\" required>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>패스워드확인</th>\r\n");
      out.write("				<td>	\r\n");
      out.write("					<input type=\"password\" class=\"form-control\" id=\"passwordCheck\" value=\"1234\" required>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>  \r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<td>	\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\" value=\"홍길동\" required>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>생년월일</th>\r\n");
      out.write("				<td>	\r\n");
      out.write("					<input type=\"date\" class=\"form-control\" name=\"birthday\" id=\"birthday\" value=\"1999-09-09\"/>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr> \r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>이메일</th>\r\n");
      out.write("				<td>	\r\n");
      out.write("					<input type=\"email\" class=\"form-control\" placeholder=\"abc@xyz.com\" name=\"email\" id=\"email\" value=\"honggd@naver.com\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>휴대폰</th>\r\n");
      out.write("				<td>	\r\n");
      out.write("					<input type=\"tel\" class=\"form-control\" placeholder=\"(-없이)01012345678\" name=\"phone\" id=\"phone\" maxlength=\"11\" value=\"01012341234\" required>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>주소</th>\r\n");
      out.write("				<td>	\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" placeholder=\"\" name=\"address\" id=\"address\" value=\"서울시 강동구 천호동 123-456\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>성별 </th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<div class=\"form-check form-check-inline\">\r\n");
      out.write("						<input type=\"radio\" class=\"form-check-input\" name=\"gender\" id=\"gender0\" value=\"M\" checked>\r\n");
      out.write("						<label  class=\"form-check-label\" for=\"gender0\">남</label>&nbsp;\r\n");
      out.write("						<input type=\"radio\" class=\"form-check-input\" name=\"gender\" id=\"gender1\" value=\"F\">\r\n");
      out.write("						<label  class=\"form-check-label\" for=\"gender1\">여</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>취미 </th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<div class=\"form-check form-check-inline\">\r\n");
      out.write("						<input type=\"checkbox\" class=\"form-check-input\" name=\"hobby\" id=\"hobby0\" value=\"운동\" checked><label class=\"form-check-label\" for=\"hobby0\">운동</label>&nbsp;\r\n");
      out.write("						<input type=\"checkbox\" class=\"form-check-input\" name=\"hobby\" id=\"hobby1\" value=\"등산\" checked><label class=\"form-check-label\" for=\"hobby1\">등산</label>&nbsp;\r\n");
      out.write("						<input type=\"checkbox\" class=\"form-check-input\" name=\"hobby\" id=\"hobby2\" value=\"독서\" checked><label class=\"form-check-label\" for=\"hobby2\">독서</label>&nbsp;\r\n");
      out.write("						<input type=\"checkbox\" class=\"form-check-input\" name=\"hobby\" id=\"hobby3\" value=\"게임\"><label class=\"form-check-label\" for=\"hobby3\">게임</label>&nbsp;\r\n");
      out.write("						<input type=\"checkbox\" class=\"form-check-input\" name=\"hobby\" id=\"hobby4\" value=\"여행\"><label class=\"form-check-label\" for=\"hobby4\">여행</label>&nbsp;\r\n");
      out.write("					 </div>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<input type=\"submit\" value=\"가입\" >\r\n");
      out.write("		<input type=\"reset\" value=\"취소\">\r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("	\r\n");
      out.write("$(\"#passwordCheck\").blur(function(){\r\n");
      out.write("	const $password = $(password);\r\n");
      out.write("	const $passwordCheck = $(passwordCheck);\r\n");
      out.write("	\r\n");
      out.write("	if($password.val() != $passwordCheck.val()){\r\n");
      out.write("		alert(\"패스워드가 일치하지 않습니다.\");\r\n");
      out.write("		$password.select();\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("	\r\n");
      out.write("$(\"#memberEnrollFrm\").submit(function(){\r\n");
      out.write("\r\n");
      out.write("	//html5 추가된 속성 pattern을 활용해 정규식 검사도 가능하지만,\r\n");
      out.write("	//구체적인 피드백제공하지는 못한다.\r\n");
      out.write("	var $id = $(\"#id\");\r\n");
      out.write("	if(/^\\w{4,}$/.test($id.val()) == false){\r\n");
      out.write("		alert(\"아이디는 최소 4자리이상이어야 합니다.\");\r\n");
      out.write("		$id.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	return true;\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
