/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-10-28 12:39:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnrollFrm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("    <title>유효성검사</title>\r\n");
      out.write("    <style>\r\n");
      out.write("    table#enroll{\r\n");
      out.write("        border: 1px solid;\r\n");
      out.write("        border-spacing:10px;\r\n");
      out.write("        width: 500px;\r\n");
      out.write("        margin: 0 auto;\r\n");
      out.write("    }\r\n");
      out.write("    table#enroll th{\r\n");
      out.write("        text-align:right;\r\n");
      out.write("    }\r\n");
      out.write("    table#enroll td.btn-wrapper{\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("    .phone {\r\n");
      out.write("        width:30px;\r\n");
      out.write("    }\r\n");
      out.write("    span.req{\r\n");
      out.write("        color:red;\r\n");
      out.write("    }\r\n");
      out.write("    .short{\r\n");
      out.write("        width:50px;\r\n");
      out.write("    }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <h3>회원가입 유효성검사</h3>\r\n");
      out.write("    <p>\r\n");
      out.write("        회원가입시 각 필드마다 유효성 검사를 하여 처리 할 수 있도록 만들어라. <br>\r\n");
      out.write("        1. ID는 영어소문자,숫자만 가능해야함(4~12자리,소문자로 시작해야함) <br>\r\n");
      out.write("        2. 비밀번호는 숫자/문자/특수문자(*!&) 포함 형태의 8~15자리<br>\r\n");
      out.write("        3. 비밀번호와 비밀번호확인은 같아야 함<br>\r\n");
      out.write("        4. 이름은 무조건 한글만 가능해야 함(최소2글자 이상)<br>\r\n");
      out.write("	5. 주민번호는 자릿수6자리,7자리이고, 모두 숫자여야함.<br>\r\n");
      out.write("        6. 이메일은 @가 포함 되어야 함(@앞에가 영문자,숫자로  4~12글자 ) <br>\r\n");
      out.write("        7. 전화번호는 첫번째 필드는 010만 입력 가능 해야 함 <br>\r\n");
      out.write("                    두번째 필드는 3자리 이상 입력 해야 함 <br>\r\n");
      out.write("                    세번째 필드는 무조건 4자리 입력 해야함 <br>\r\n");
      out.write("                    (모두 숫자만 가능 해야함) <br>\r\n");
      out.write("    </p>\r\n");
      out.write("    <form action=\"");
      out.print( request.getContextPath() );
      out.write("/member/enroll.do\" \r\n");
      out.write("    	  method=\"POST\"\r\n");
      out.write("    	  name=\"memberFrm\">\r\n");
      out.write("    <!-- table#enroll>(tr>th+td)*10 -->\r\n");
      out.write("        <table id=\"enroll\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>아이디<span class=\"req\">*</span></th>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"text\" name=\"userId\" id=\"userId\" >\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>비밀번호<span class=\"req\">*</span></th>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"password\" name=\"pwd\" id=\"pwd\" >\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>비밀번호확인</th>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"password\" id=\"pwdCheck\">\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>이름<span class=\"req\">*</span></th>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"text\" name=\"userName\" id=\"userName\" > \r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>주민번호<span class=\"req\">*</span></th>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"text\" name=\"ssn1\" id=\"ssn1\" class=\"short\" >-\r\n");
      out.write("                    <input type=\"password\" name=\"ssn2\" id=\"ssn2\" class=\"short\" >\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>이메일<span class=\"req\">*</span></th>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"email\" name=\"email\" id=\"email\" >\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>전화번호<span class=\"req\">*</span></th>\r\n");
      out.write("                <td>\r\n");
      out.write("                <!-- input:text[name=tel$]#tel$.phone*3 -->\r\n");
      out.write("                    <input type=\"text\" name=\"tel1\" id=\"tel1\" class=\"phone\" >-\r\n");
      out.write("                    <input type=\"text\" name=\"tel2\" id=\"tel2\" class=\"phone\" >-\r\n");
      out.write("                    <input type=\"text\" name=\"tel3\" id=\"tel3\" class=\"phone\" >\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>직업</th>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <select name=\"job\" id=\"job\">\r\n");
      out.write("                        <option value=\"공무원\">공무원</option>\r\n");
      out.write("                        <option value=\"개발자\">개발자</option>\r\n");
      out.write("                        <option value=\"무직\">무직</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>취미</th>\r\n");
      out.write("                <td>\r\n");
      out.write("            <!-- (input:checkbox#hobby$[name=hobby]+label[for=hobby$])*5 -->\r\n");
      out.write("                    <input type=\"checkbox\" name=\"hobby\" id=\"hobby1\" value=\"reading\">\r\n");
      out.write("                    <label for=\"hobby1\">독서</label>\r\n");
      out.write("                    <input type=\"checkbox\" name=\"hobby\" id=\"hobby2\" value=\"development\">\r\n");
      out.write("                    <label for=\"hobby2\">개발</label>\r\n");
      out.write("                    <input type=\"checkbox\" name=\"hobby\" id=\"hobby3\" value=\"exercise\">\r\n");
      out.write("                    <label for=\"hobby3\">운동</label>\r\n");
      out.write("                    <input type=\"checkbox\" name=\"hobby\" id=\"hobby4\" value=\"game\">\r\n");
      out.write("                    <label for=\"hobby4\">게임</label>\r\n");
      out.write("                    <input type=\"checkbox\" name=\"hobby\" id=\"hobby5\" value=\"movie\">\r\n");
      out.write("                    <label for=\"hobby5\">영화</label>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td colspan=\"2\" class=\"btn-wrapper\">\r\n");
      out.write("                    <input type=\"submit\" value=\"제출\">&nbsp;\r\n");
      out.write("                    <input type=\"reset\" value=\"초기화\">\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("    </form>\r\n");
      out.write("    <script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	document.memberFrm.onsubmit = function(){\r\n");
      out.write("\r\n");
      out.write("        var userId = document.getElementById(\"userId\");\r\n");
      out.write("        var pwd = document.getElementById(\"pwd\");\r\n");
      out.write("        var pwdCheck = document.getElementById(\"pwdCheck\");\r\n");
      out.write("        var userName = document.getElementById(\"userName\");\r\n");
      out.write("        var email = document.getElementById(\"email\");\r\n");
      out.write("        var ssn1 = document.getElementById(\"ssn1\");\r\n");
      out.write("        var ssn2 = document.getElementById(\"ssn2\");\r\n");
      out.write("        var tel1 = document.getElementById(\"tel1\");\r\n");
      out.write("        var tel2 = document.getElementById(\"tel2\");\r\n");
      out.write("        var tel3 = document.getElementById(\"tel3\");\r\n");
      out.write("\r\n");
      out.write("        //1.아이디검사\r\n");
      out.write("        //첫글자는 반드시 영소문자로 이루어지고, \r\n");
      out.write("        //숫자가 하나이상 포함되어야함.\r\n");
      out.write("        //아이디의 길이는 4~12글자사이\r\n");
      out.write("        var regExp1 = /^[a-z][a-z\\d]{3,11}$/;\r\n");
      out.write("        var regExp2 = /[0-9]/;\r\n");
      out.write("        // if(!regExpTest(regExp1\r\n");
      out.write("        //               ,userId\r\n");
      out.write("        //               ,\"아이디는 영소문자로 시작하는 4~12글자입니다.\"))\r\n");
      out.write("        //     return false;\r\n");
      out.write("        // if(!regExpTest(regExp2\r\n");
      out.write("        //               ,userId\r\n");
      out.write("        //               ,\"아이디는 숫자를 하나이상 포함하세요.\"))\r\n");
      out.write("        //     return false;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        //2.비밀번호 확인 검사\r\n");
      out.write("        //숫자/문자/특수문자/ 포함 형태의 8~15자리 이내의 암호 정규식 \r\n");
      out.write("        //전체길이검사 /^.{8,15}$/\r\n");
      out.write("        //숫자하나 반드시 포함 /\\d/ \r\n");
      out.write("        //영문자 반드시 포함 /[a-zA-Z]/\r\n");
      out.write("        //특수문자 반드시 포함  /[\\*!&]/\r\n");
      out.write("			\r\n");
      out.write("		var regExpArr = [/^.{8,15}$/, /\\d/, /[a-zA-Z]/, /[\\*!&]/];\r\n");
      out.write("\r\n");
      out.write("        for(let i = 0; i < regExpArr.length; i++){\r\n");
      out.write("            if(!regExpTest(regExpArr[i], pwd, \"비밀번호는 8~15자리 숫자/문자/특수문자를 포함해야합니다.\")){\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("	    //비밀번호일치여부\r\n");
      out.write("        if(!isEqualPwd()){\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //3.이름검사\r\n");
      out.write("        //한글2글자 이상만 허용. [가-힣] 으로 해도되긴 하지만 자음만(ㄱㄴㄷㄹ)있으면 필터링이 안됨\r\n");
      out.write("        var regExp3 = /^[가-힣]{2,}$/;\r\n");
      out.write("        if(!regExpTest(regExp3,userName,\"한글2글자이상 입력하세요.\"))\r\n");
      out.write("            return false;\r\n");
      out.write("\r\n");
      out.write("        //4.주민번호체크\r\n");
      out.write("        var regExp4 = /^\\d{2}(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[01])$/;\r\n");
      out.write("        var regExp5 = /^[1234]\\d{6}$/;\r\n");
      out.write("        if(!regExpTest(regExp4,ssn1,\"숫자만 입력하세요.\"))\r\n");
      out.write("            return false;\r\n");
      out.write("        if(!regExpTest(regExp5,ssn2,\"숫자만 입력하세요.\"))\r\n");
      out.write("            return false;\r\n");
      out.write("\r\n");
      out.write("        if(!ssnCheck(ssn1.value,ssn2.value)){\r\n");
      out.write("            alert(\"올바른 주민번호가 아닙니다.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //5.이메일 검사\r\n");
      out.write("        // 4글자 이상(\\w = [a-zA-Z0-9_], [\\w-\\.]) @가 나오고\r\n");
      out.write("        // 1글자 이상(주소). 글자 가 1~3번 반복됨\r\n");
      out.write("        if(!regExpTest(/^[\\w]{4,}@[\\w]+(\\.[\\w]+){1,3}$/, email, \"이메일 형식에 어긋납니다.\"))\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        //6. 전화번호 검사\r\n");
      out.write("        // 전화번호 앞자리는 010, 두번째 자리는 3~4자리 숫자, 세번째 자리는 4자리 숫자\r\n");
      out.write("        if (!regExpTest(/^010$/, tel1, \"번호 2자리 이상 입력\"))\r\n");
      out.write("                return false;\r\n");
      out.write("        if (!regExpTest(/^[0-9]{3,4}$/, tel2, \"번호 3자리 이상 입력\"))\r\n");
      out.write("                return false;\r\n");
      out.write("        if (!regExpTest(/^[0-9]{4}$/, tel3, \"4자리 번호 입력\"))\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function ssnCheck(ssn1, ssn2){\r\n");
      out.write("        var ssn = ssn1+ssn2;\r\n");
      out.write("        /*\r\n");
      out.write("			주민등록번호 체계 및 유효성 검사 (javascript)	\r\n");
      out.write("			https://eyecandyzero.tistory.com/240	\r\n");
      out.write("\r\n");
      out.write("			//900909-1234561\r\n");
      out.write("			var total = 9*2 + 0*3 + 0*4 + 9*5 + 0*6 + 9*7 + 1*8 + 2*9 + 3*2 + 4*3 + 5*4 + 6*5;//220\r\n");
      out.write("            var result = total%11;//0\r\n");
      out.write("			result = 11-0;//11\r\n");
      out.write("			result = result%10;//1\r\n");
      out.write("\r\n");
      out.write("			if(result == 13번째자리수) return true;\r\n");
      out.write("			else return false;\r\n");
      out.write("\r\n");
      out.write("        */\r\n");
      out.write("        var total = 0;\r\n");
      out.write("        for(var i=0; i<12; i++){\r\n");
      out.write("            if(i<8){\r\n");
      out.write("                total += parseInt(ssn.substr(i,1))*(i+2);\r\n");
      out.write("            }\r\n");
      out.write("            else {\r\n");
      out.write("                total += parseInt(ssn.substr(i,1))*(i-6);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        //마지막수와 비교할 수 구하기\r\n");
      out.write("        var result = (11-(total%11))%10;\r\n");
      out.write("        //마지막수(13번째 자리)\r\n");
      out.write("        var num13 = parseInt(ssn.substr(12,1));\r\n");
      out.write("        console.log(result+'=='+num13);\r\n");
      out.write("        //결과\r\n");
      out.write("        if(result==num13)\r\n");
      out.write("            return true;\r\n");
      out.write("        else \r\n");
      out.write("            return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("	function isEqualPwd(){\r\n");
      out.write("        if(pwd.value == pwdCheck.value){\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("        else{\r\n");
      out.write("            alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("            pwd.select();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function regExpTest(regExp, el, msg){\r\n");
      out.write("        if(regExp.test(el.value))\r\n");
      out.write("            return true;\r\n");
      out.write("        //적합한 문자열이 아닌 경우\r\n");
      out.write("        alert(msg);\r\n");
      out.write("        el.value=\"\";\r\n");
      out.write("        el.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
