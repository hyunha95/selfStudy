/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-12-18 13:01:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.student;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class selectOne_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1639378322485L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/web_server_workspace/practice-mybatis/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Mybatis 실습</title>\r\n");
      out.write("<script\r\n");
      out.write("  src=\"https://code.jquery.com/jquery-3.6.0.js\"\r\n");
      out.write("  integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\"\r\n");
      out.write("  crossorigin=\"anonymous\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("div#student-container{text-align:center;}\r\n");
      out.write("table.tbl-student{margin:10px auto;border:1px solid; border-collapse:collapse;}\r\n");
      out.write("table.tbl-student th,table.tbl-student td{\r\n");
      out.write("	border:1px solid;\r\n");
      out.write("	padding:5px;\r\n");
      out.write("	line-height: 2em; /*input태그로 인해 cell이 높이가 길어져 border 두줄현상방지 */\r\n");
      out.write("}\r\n");
      out.write("table.tbl-student th{text-align:right;}\r\n");
      out.write("table.tbl-student td{text-align:left;}\r\n");
      out.write("table.tbl-student tr:last-of-type td:first-child{text-align:center;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"student-container\">\r\n");
      out.write("		<h2>학생정보 검색</h2>\r\n");
      out.write("		<button id=\"btn-total-count\">전체학생수</button>\r\n");
      out.write("		<form name=\"selectOneStudentFrm\">\r\n");
      out.write("			<table class=\"tbl-student\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>학생번호</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"number\" name=\"no\" value=\"\" required/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"submit\" value=\"검색\" />\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("		\r\n");
      out.write("		<hr />\r\n");
      out.write("		\r\n");
      out.write("		<h1>학생 정보 수정</h1>\r\n");
      out.write("		<form name=\"studentUpdateFrm\">\r\n");
      out.write("			<table class=\"tbl-student\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>학생번호</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"number\" name=\"no\" required readonly/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>학생이름</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"name\" required/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>학생전화번호</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"tel\" name=\"tel\"  required/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"button\" value=\"수정\" onclick=\"updateStudent();\"/>\r\n");
      out.write("						<input type=\"button\" value=\"삭제\" onclick=\"deleteStudent();\" />\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("<script>\r\n");
      out.write("/**\r\n");
      out.write(" * 학생정보 수정\r\n");
      out.write(" */\r\n");
      out.write("function updateStudent() {\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/student/updateStudent.do\",\r\n");
      out.write("		data:{\r\n");
      out.write("			\"no\" : $(\"[name=no]\").val(),\r\n");
      out.write("			\"name\" : $(\"[name=name]\").val(),\r\n");
      out.write("			\"tel\" : $(\"[name=tel]\").val()\r\n");
      out.write("		},\r\n");
      out.write("		success(res){\r\n");
      out.write("			console.log(res);\r\n");
      out.write("		},\r\n");
      out.write("		error: console.log\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/**\r\n");
      out.write(" * 학생1명정보 조회\r\n");
      out.write(" */\r\n");
      out.write("$(document.selectOneStudentFrm).submit((e) => {\r\n");
      out.write("	e.preventDefault(); // 폼제출방지\r\n");
      out.write("	\r\n");
      out.write("	const no = $(\"[name=no]\", e.target).val();\r\n");
      out.write("	if(!Number(no)) return;\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/student/selectOneStudent.do\",\r\n");
      out.write("		data: {no}, //{no : no}\r\n");
      out.write("		success(res){\r\n");
      out.write("			console.log(res);\r\n");
      out.write("			\r\n");
      out.write("			$(res).each((i, {no, name, tel}) => {\r\n");
      out.write("				console.log(no, name, tel);\r\n");
      out.write("				$(\"[name=no]\").val(no);\r\n");
      out.write("				$(\"[name=name]\").val(name);\r\n");
      out.write("				$(\"[name=tel]\").val(tel);\r\n");
      out.write("					\r\n");
      out.write("			});\r\n");
      out.write("		},\r\n");
      out.write("		error: console.log\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(\"#btn-total-count\").click((e) => {\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/student/totalCount.do\",\r\n");
      out.write("		success(res){\r\n");
      out.write("			console.log(res);\r\n");
      out.write("			const {totalCount} = res;\r\n");
      out.write("			alert(`전체 학생수는 ${totalCount}명 입니다.`);\r\n");
      out.write("		},\r\n");
      out.write("		error: console.log\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
